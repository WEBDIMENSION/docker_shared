version: "3"
services:
  proxy:
    build: ./nginx-proxy
    container_name: ${PROXY_CONTAINER_NAME}
    ports:
      - ${HOST_HTTP_PORT}:${CONTAINER_HTTP_PORT}
      - ${HOST_HTTPS_PORT}:${CONTAINER_HTTPS_PORT}
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ${CERTS_DIR}:/etc/nginx/certs:ro
    restart: always
    logging:
      options:
        max-size: "5m"
        max-file: "10"

  web:
    build: ./web
    container_name: ${WEB_CONTAINER_NAME}
    environment:
      VIRTUAL_HOST: ${HOSTNAME}
      VIRTUAL_HOST: ${MAIL_CATCHER_HOSTNAME}
      VIRTUAL_HOST: ${JYUPYTER_HOSTNAME}
      CERT_NAME: ${CERTS_FILE_NAME}
      HTTPS_METHOD: noredirect
    volumes:
      - ${WEB_DOCUMENT_ROOT}:/usr/share/nginx/html
      - ${WEB_CONF_DIR}:/etc/nginx/conf.d
    restart: always

  smtp:
    build: ./mailcatcher
    container_name: ${MAIL_CATCHER_CONTAINER_NAME}
    ports:
      - ${MAIL_CATCHER_WEB_HOST_PORT}:${MAIL_CATCHER_WEB_CONTAINER_PORT}
      - ${MAIL_CATCHER_SMTP_HOST_PORT}:${MAIL_CATCHER_SMTP_CONTAINER_PORT}
    restart: always

  registry:
    build: ./registry
    container_name: ${REGISTRY_CONTAINER_NAME}
    ports:
      #- 127.0.0.1:5000:5000
      - ${REGISTRY_HOST_PORT}:${REGISTRY_CONTAINER_PORT}
    volumes:
      - ${REGISTRY_DIR}:/var/lib/registry
    restart: always

  registry-web:
    build: ./registry-web
    container_name: ${REGISTRY_WEB_CONTAINER_NAME}
    ports:
      - ${REGISTRY_WEB_HOST_PORT}:80
    environment:
      ENV_DOCKER_REGISTRY_HOST: ${REGISTRY_CONTAINER_NAME}
      ENV_DOCKER_REGISTRY_PORT: ${REGISTRY_HOST_PORT}

  portainer:
    build: ./portainer
    image: portainer/portainer
    container_name: ${PORTAINER_CONTAINER_NAME}
    ports:
      - ${PORTAINER_HOST_PORT}:${PORTAINER_CONTAINER_PORT}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PORTAINER_DATA_DIR}:/data
    restart: always

  nfs-server:
    privileged: true
    build: ./nfs
    container_name: ${NFS_CONTAINER_NAME}
    restart: unless-stopped
    environment: 
    - SHARED_DIRECTORY=/nfsshare
    ports:
    - ${NFS_HOST_PORT}:${NFS_CONTAINER_PORT}
    volumes:
    - ${NFS_SHARED_DIRECTORY}:/nfsshare

networks:
  default:
    external:
      name: ${PROXY_NETWORK_NAME}
